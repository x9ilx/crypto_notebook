"""Добавил модели валюты, операций и минимизации рисков

Revision ID: 53a88cbc36bd
Revises: f6af4264788f
Create Date: 2024-11-22 14:07:37.864149
"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '53a88cbc36bd'
down_revision: Union[str, None] = 'f6af4264788f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'currency',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('quantity', sa.Float(), nullable=False),
        sa.Column('profit', sa.Float(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('currency', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_currency_id'), ['id'], unique=False
        )

    op.create_table(
        'transaction',
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column(
            'transaction_type',
            sa.Enum('SALE', 'PURCHASE', name='transactiontype'),
            nullable=False,
        ),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column('currency_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['currency_id'],
            ['currency.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_transaction_id'), ['id'], unique=False
        )

    op.create_table(
        'riskminimisation',
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('transaction_id', sa.Integer(), nullable=False),
        sa.Column('currency_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['currency_id'],
            ['currency.id'],
        ),
        sa.ForeignKeyConstraint(
            ['transaction_id'],
            ['transaction.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('riskminimisation', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_riskminimisation_id'), ['id'], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('riskminimisation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_riskminimisation_id'))

    op.drop_table('riskminimisation')
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transaction_id'))

    op.drop_table('transaction')
    with op.batch_alter_table('currency', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_currency_id'))

    op.drop_table('currency')
    # ### end Alembic commands ###
